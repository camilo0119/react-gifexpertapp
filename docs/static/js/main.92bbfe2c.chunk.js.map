{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","args","type","value","onChange","target","propsTypes","PropsTypes","func","isRequired","getGift","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpert","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"0OAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAY5C,OACI,oCACG,0BAAMC,SAVQ,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,aAOxDZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAWC,KAAKC,Y,2BC7BtBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,yFAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACPC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARnB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,yBAAKc,UAAU,4DACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAjCa,EAFqB,EAE3BN,KAAca,EAFa,EAEbA,QAEtB,OACI,oCACA,4BAAKpB,GACJoB,GAAW,cACZ,yBAAKJ,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEenCkB,EA3BI,WAAO,IAAD,EAEW9C,mBAAS,CAAC,iBAFrB,mBAElB+C,EAFkB,KAENhD,EAFM,KAQrB,OACI,6BACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQgD,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,QAItB,4BAAQ8B,QAlBE,WAClBjD,EAAc,GAAD,mBAAKgD,GAAL,CAAiB,kBAiBtB,c,MCrBZE,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.92bbfe2c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropsTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(args => [inputValue, ...args])\r\n            setinputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => setinputValue(e.target.value)}\r\n            />\r\n           </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propsTypes = {\r\n    setCategories: PropsTypes.func.isRequired\r\n}","export const getGift = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&rating=g&offset=0&lang=en&api_key=tD8fhyWntNoq6lZEvze2BDoOL9JrfE8J`\r\n    const response = await fetch(url)\r\n    const {data} = await response.json()\r\n    const gifs = data.map(img => {\r\n        return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && 'Cargando...'}\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem key={img.id} {...img}/>\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport { getGift } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    // Evita que el metodo se ejecute cada vez que exista un cambio en el componente\r\n    useEffect(() => {\r\n        getGift(category).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category]) //Se llama si category cambia\r\n\r\n    return state\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpert = () => {\r\n\r\nconst [categories, setCategories] = useState(['Rick & morty'])\r\n\r\nconst handleAddItem = () => {\r\n    setCategories([...categories, 'Nuevo item'])\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <h2>GirfExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n            <button onClick={handleAddItem}>Add item</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftExpert","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport GiftExpert from './GiftExpert'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <GiftExpert />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}